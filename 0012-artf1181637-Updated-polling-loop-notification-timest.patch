From c7eaee6623f5259a128981e4c8c585713c7b001f Mon Sep 17 00:00:00 2001
From: "suryaprakash.konduru" <suryaprakash.konduru@nxp.com>
Date: Mon, 16 Sep 2024 19:26:16 +0530
Subject: [PATCH 12/18] [artf1181637] Updated polling loop notification
 timestamping in microseconds

Change-Id: I78d42351a906368277079d57e919da948679fe07
---
 .../observe_mode/ReaderPollConfigParser.cc    | 45 ++++++++++++++-----
 .../observe_mode/ReaderPollConfigParser.h     | 14 ++++++
 2 files changed, 48 insertions(+), 11 deletions(-)

diff --git a/snxxx/halimpl/observe_mode/ReaderPollConfigParser.cc b/snxxx/halimpl/observe_mode/ReaderPollConfigParser.cc
index 08824a52..bd7bfc79 100644
--- a/snxxx/halimpl/observe_mode/ReaderPollConfigParser.cc
+++ b/snxxx/halimpl/observe_mode/ReaderPollConfigParser.cc
@@ -142,6 +142,36 @@ vector<uint8_t> ReaderPollConfigParser::parseCmaEvent(vector<uint8_t> p_event) {
   return event_data;
 }
 
+/*****************************************************************************
+ *
+ * Function         getTimestampInMicroSeconds
+ *
+ * Description      Function to convert Timestamp in microseconds and gives it
+ *in Big endian format
+ *
+ * Parameters       rawFrame
+ *
+ * Returns          vector<uint8_t>
+ *
+ ****************************************************************************/
+vector<uint8_t> ReaderPollConfigParser::getTimestampInMicroSeconds(
+    vector<uint8_t> rawFrame) {
+  if (rawFrame.size() < 4) {
+    return vector<uint8_t>{0x00, 0x00, 0x00, 0x00};
+  }
+  uint32_t timeStampInMicroSeconds =
+      ((rawFrame.at(1) << 8) + rawFrame.at(0)) * 1000 +
+      ((rawFrame.at(3) << 8) + rawFrame.at(2));
+
+  vector<uint8_t> timeStamp;
+  timeStamp.push_back((timeStampInMicroSeconds >> 24) & 0xFF);
+  timeStamp.push_back((timeStampInMicroSeconds >> 16) & 0xFF);
+  timeStamp.push_back((timeStampInMicroSeconds >> 8) & 0xFF);
+  timeStamp.push_back((timeStampInMicroSeconds) & 0xFF);
+
+  return timeStamp;
+}
+
 /*****************************************************************************
  *
  * Function         getEvent
@@ -169,12 +199,9 @@ vector<uint8_t> ReaderPollConfigParser::getEvent(vector<uint8_t> p_event,
 
   if (cmaEventType == L2_EVT_TAG) {
     // Timestamp should be in Big Endian format
-    int idx = 3;
-    vector<uint8_t> timestamp;
-    timestamp.push_back(p_event[idx--]);
-    timestamp.push_back(p_event[idx--]);
-    timestamp.push_back(p_event[idx--]);
-    timestamp.push_back(p_event[idx]);
+
+    vector<uint8_t> timestamp = getTimestampInMicroSeconds(p_event);
+
     lastKnownGain = p_event[INDEX_OF_L2_EVT_GAIN];
     switch (p_event[INDEX_OF_L2_EVT_TYPE] & LX_TYPE_MASK) {
       // Trigger Type
@@ -226,11 +253,7 @@ vector<uint8_t> ReaderPollConfigParser::getEvent(vector<uint8_t> p_event,
   } else if (cmaEventType == CMA_EVT_TAG) {
     // Timestamp should be in Big Endian format
     int idx = 3;
-    vector<uint8_t> timestamp;
-    timestamp.push_back(p_event[idx--]);
-    timestamp.push_back(p_event[idx--]);
-    timestamp.push_back(p_event[idx--]);
-    timestamp.push_back(p_event[idx]);
+    vector<uint8_t> timestamp = getTimestampInMicroSeconds(p_event);
     switch (p_event[INDEX_OF_CMA_EVT_TYPE]) {
       // Trigger Type
       case CMA_EVENT_TRIGGER_TYPE:
diff --git a/snxxx/halimpl/observe_mode/ReaderPollConfigParser.h b/snxxx/halimpl/observe_mode/ReaderPollConfigParser.h
index a05a6296..aa96e044 100644
--- a/snxxx/halimpl/observe_mode/ReaderPollConfigParser.h
+++ b/snxxx/halimpl/observe_mode/ReaderPollConfigParser.h
@@ -209,4 +209,18 @@ class ReaderPollConfigParser {
    *
    ****************************************************************************/
   void setNotificationType(uint8_t notificationType);
+
+  /*****************************************************************************
+   *
+   * Function         getTimestampInMicroSeconds
+   *
+   * Description      Function to convert Timestamp in microseconds and gives it
+   *in Big endian format
+   *
+   * Parameters       rawFrame
+   *
+   * Returns          vector<uint8_t>
+   *
+   ****************************************************************************/
+  vector<uint8_t> getTimestampInMicroSeconds(vector<uint8_t> rawFrame);
 };
-- 
2.47.0

